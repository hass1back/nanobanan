
import React, { useState } from 'react';
import Card from './Card';
import Button from './Button';
import LoadingOverlay from './LoadingOverlay';
import { generateImageFromText } from '../services/geminiService';

const SparklesIcon: React.FC<React.SVGProps<SVGSVGElement>> = (props) => (
    <svg xmlns="http://www.w3.org/2000/svg" className="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor" {...props}>
        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 3v4M3 5h4M6 17v4m-2-2h4m5-16l2.293 2.293a1 1 0 010 1.414L10 12l-2.293 2.293a1 1 0 01-1.414 0L4 12l2.293-2.293a1 1 0 011.414 0L10 12zm11 0l-2.293 2.293a1 1 0 01-1.414 0L12 12l2.293-2.293a1 1 0 011.414 0L18 12l2.293 2.293a1 1 0 010 1.414L18 18l-2.293-2.293a1 1 0 010-1.414L18 12z" />
    </svg>
);

const ImageGenerator: React.FC = () => {
  const [prompt, setPrompt] = useState<string>('');
  const [generatedImage, setGeneratedImage] = useState<string | null>(null);
  const [isLoading, setIsLoading] = useState<boolean>(false);
  const [error, setError] = useState<string | null>(null);

  const handleGenerate = async () => {
    if (!prompt) {
      setError('Please enter a prompt.');
      return;
    }
    setIsLoading(true);
    setError(null);
    setGeneratedImage(null);

    try {
      const imageUrl = await generateImageFromText(prompt);
      setGeneratedImage(imageUrl);
    } catch (err) {
      setError(err instanceof Error ? err.message : 'An unknown error occurred.');
      console.error(err);
    } finally {
      setIsLoading(false);
    }
  };

  return (
    <>
      {isLoading && <LoadingOverlay message="Generating your masterpiece..." />}
      <Card
        title="Text-to-Image Generation"
        description="Describe any image you can imagine, and our AI will bring it to life. Be as descriptive as possible for the best results."
      >
        <div className="space-y-6">
          <textarea
            value={prompt}
            onChange={(e) => setPrompt(e.target.value)}
            placeholder="e.g., A majestic lion wearing a crown, sitting on a throne in a futuristic city, photorealistic."
            className="w-full h-32 p-3 bg-gray-700 border border-gray-600 rounded-md focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition"
            disabled={isLoading}
          />

          {error && <p className="text-red-400 text-sm">{error}</p>}

          <div className="text-center">
            <Button
              onClick={handleGenerate}
              isLoading={isLoading}
              disabled={!prompt}
              icon={<SparklesIcon />}
            >
              Generate Image
            </Button>
          </div>

          {generatedImage && (
            <div className="mt-8">
              <h3 className="text-lg font-semibold text-center mb-4">Your Generated Image</h3>
              <div className="bg-gray-700 rounded-lg p-2">
                <img
                  src={generatedImage}
                  alt="Generated by AI"
                  className="w-full max-w-lg mx-auto rounded-md object-contain"
                />
              </div>
            </div>
          )}
        </div>
      </Card>
    </>
  );
};

export default ImageGenerator;
